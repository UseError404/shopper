@forward "base"; // Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
@forward "common";  // Подключение стилей общих элементов проекта
@forward "importStylesPages";// Подключение стилей отдельных страниц страниц
@forward "base/null";// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
// Подключить если есть локальные файлы шрифтов
//@forward "fonts/fonts";
// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@forward "fonts/icons";

@use "sass:math";
@use "variables" as *; // Подключение миксинов ===========================================================================================================================================================================================================================================================================
@use "base/mixins" as *; // Подключение миксинов ===========================================================================================================================================================================================================================================================================

//&display=swap - добавить при подключении через плагин
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400..500&family=Montserrat:wght@400..800&display=swap');

body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

